# Node.js with React
# Build a Node.js project that uses React.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

trigger:
- master
- development
- feature/sonarcloud

variables:
  uiSource: 'src'
  uiBuild: 'build'
  shouldDeploy: $[in(variables['Build.SourceBranch'], 'refs/heads/master', 'refs/heads/development')]

pool:
  vmImage: 'ubuntu-latest'
steps:
- task: NodeTool@0
  inputs:
    versionSpec: '12.x'
  displayName: 'Install Node.js'

- script: |
    pushd $(uiSource)
    npm install
    popd
  displayName: 'Install dependencies'

- script: npm run build
  condition: and(succeeded(), eq(variables.shouldDeploy, true))
  displayName: 'Build for production'
- task: ArchiveFiles@2
  condition: and(succeeded(), eq(variables.shouldDeploy, true))
  inputs:
    rootFolderOrFile: '$(uiBuild)'
    includeRootFolder: false
    archiveType: 'zip'
    archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
    replaceExistingArchive: true
- task: PublishBuildArtifacts@1
  condition: and(succeeded(), eq(variables.shouldDeploy, true))
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'drop'
    publishLocation: 'Container'

- task: SonarCloudPrepare@1
  inputs:
    SonarCloud: 'sonarcloud-frontend'
    organization: 'katacseke'
    scannerMode: 'CLI'
    projectKey: "katacseke_data-catalog-frontend"
    projectName: "Data Catalog Frontend"
  displayName: 'Prepare SonarCloud analysis'
- script: npm run test:coverage  
  displayName: 'Run tests and generate coverage'
- task: SonarCloudAnalyze@1
  condition: succeededOrFailed()
  displayName: 'Run SonarCloud analysis'
- task: SonarCloudPublish@1
  condition: succeededOrFailed()
  displayName: 'Publish SonarCloud results'

